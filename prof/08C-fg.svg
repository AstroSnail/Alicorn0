<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1190.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >08C</text>
<text id="details" x="10.00" y="1173" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1173" > </text>
<g id="frames">
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="485" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="789" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1045" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1055.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (57 samples, 39.04%)</title><rect x="721.2" y="405" width="460.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="724.23" y="415.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="933" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="943.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="773" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1077" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1087.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (115 samples, 78.77%)</title><rect x="252.5" y="645" width="929.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="255.47" y="655.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:check (8 samples, 5.48%)</title><rect x="1028.4" y="245" width="64.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1031.36" y="255.5" >evaluat..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="901" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="911.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="341" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:__eq (8 samples, 5.48%)</title><rect x="1028.4" y="165" width="64.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1031.36" y="175.5" >[string..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="869" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="1013" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:check (12 samples, 8.22%)</title><rect x="10.0" y="117" width="97.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1125" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1135.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="757" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:39 (8 samples, 5.48%)</title><rect x="1028.4" y="213" width="64.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1031.36" y="223.5" >[string..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="165" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:__eq (12 samples, 8.22%)</title><rect x="10.0" y="101" width="97.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >[string]:__eq</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="917" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="837" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:20 (12 samples, 8.22%)</title><rect x="10.0" y="1125" width="97.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >[string]:20</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="277" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (125 samples, 85.62%)</title><rect x="171.6" y="725" width="1010.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="174.64" y="735.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="997" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1007.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="917" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="927.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (126 samples, 86.30%)</title><rect x="163.6" y="741" width="1018.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="166.56" y="751.5" >evaluator.lua:infer</text>
</g>
<g >
<title>[string]:__eq (12 samples, 8.22%)</title><rect x="10.0" y="69" width="97.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >[string]:__eq</text>
</g>
<g >
<title>evaluator.lua:infer (83 samples, 56.85%)</title><rect x="511.1" y="501" width="670.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="514.10" y="511.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (131 samples, 89.73%)</title><rect x="123.2" y="885" width="1058.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="126.15" y="895.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1029" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1039.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="533" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="645" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:8 (12 samples, 8.22%)</title><rect x="10.0" y="53" width="97.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >[string]:8</text>
</g>
<g >
<title>evaluator.lua:infer (127 samples, 86.99%)</title><rect x="155.5" y="757" width="1026.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="158.48" y="767.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (95 samples, 65.07%)</title><rect x="414.1" y="565" width="767.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="417.11" y="575.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (130 samples, 89.04%)</title><rect x="131.2" y="821" width="1050.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="134.23" y="831.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (55 samples, 37.67%)</title><rect x="737.4" y="389" width="444.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="740.40" y="399.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="469" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (105 samples, 71.92%)</title><rect x="333.3" y="597" width="848.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="336.29" y="607.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (73 samples, 50.00%)</title><rect x="591.9" y="469" width="590.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="594.92" y="479.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (51 samples, 34.93%)</title><rect x="769.7" y="373" width="412.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="772.73" y="383.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="693" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:check (8 samples, 5.48%)</title><rect x="1028.4" y="261" width="64.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1031.36" y="271.5" >evaluat..</text>
</g>
<g >
<title>evaluator.lua:infer (121 samples, 82.88%)</title><rect x="204.0" y="677" width="977.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="206.97" y="687.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="805" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="997" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:__eq (8 samples, 5.48%)</title><rect x="1028.4" y="229" width="64.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1031.36" y="239.5" >[string..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="885" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="901" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="149" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:__eq (9 samples, 6.16%)</title><rect x="826.3" y="245" width="72.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="829.30" y="255.5" >[string]..</text>
</g>
<g >
<title>evaluator.lua:infer (35 samples, 23.97%)</title><rect x="899.0" y="341" width="282.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="902.04" y="351.5" >evaluator.lua:infer</text>
</g>
<g >
<title>all (146 samples, 100%)</title><rect x="10.0" y="1141" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" ></text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="549" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:8 (9 samples, 6.16%)</title><rect x="826.3" y="261" width="72.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="829.30" y="271.5" >[string]:8</text>
</g>
<g >
<title>[string]:39 (9 samples, 6.16%)</title><rect x="826.3" y="293" width="72.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="829.30" y="303.5" >[string]..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1061" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1071.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="725" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:check (9 samples, 6.16%)</title><rect x="826.3" y="341" width="72.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="829.30" y="351.5" >evaluato..</text>
</g>
<g >
<title>[string]:__eq (12 samples, 8.22%)</title><rect x="10.0" y="37" width="97.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >[string]:__eq</text>
</g>
<g >
<title>evaluator.lua:infer (8 samples, 5.48%)</title><rect x="1117.3" y="245" width="64.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1120.26" y="255.5" >evaluat..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="949" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="959.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="261" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (109 samples, 74.66%)</title><rect x="301.0" y="613" width="880.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="303.96" y="623.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (62 samples, 42.47%)</title><rect x="680.8" y="421" width="501.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="683.82" y="431.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="421" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="965" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="293" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="853" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:__eq (8 samples, 5.48%)</title><rect x="1028.4" y="197" width="64.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1031.36" y="207.5" >[string..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1109" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1119.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="677" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (100 samples, 68.49%)</title><rect x="373.7" y="581" width="808.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="376.70" y="591.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (118 samples, 80.82%)</title><rect x="228.2" y="661" width="953.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="231.22" y="671.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (19 samples, 13.01%)</title><rect x="1028.4" y="277" width="153.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1031.36" y="287.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (128 samples, 87.67%)</title><rect x="147.4" y="789" width="1034.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="150.40" y="799.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="741" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (71 samples, 48.63%)</title><rect x="608.1" y="453" width="573.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="611.08" y="463.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="981" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="991.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="437" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="245" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (122 samples, 83.56%)</title><rect x="195.9" y="693" width="986.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="198.89" y="703.5" >evaluator.lua:infer</text>
</g>
<g >
<title>[string]:8 (8 samples, 5.48%)</title><rect x="1028.4" y="181" width="64.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1031.36" y="191.5" >[string..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="1061" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="197" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (125 samples, 85.62%)</title><rect x="171.6" y="709" width="1010.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="174.64" y="719.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="949" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:check (9 samples, 6.16%)</title><rect x="826.3" y="325" width="72.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="829.30" y="335.5" >evaluato..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="181" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="309" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (77 samples, 52.74%)</title><rect x="559.6" y="485" width="622.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="562.59" y="495.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="389" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="1077" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="613" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:require (12 samples, 8.22%)</title><rect x="10.0" y="1109" width="97.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >[string]:re..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="213" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="709" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="325" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >evaluator.l..</text>
</g>
<g >
<title>runtest.lua:fn (12 samples, 8.22%)</title><rect x="10.0" y="1093" width="97.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >runtest.lua..</text>
</g>
<g >
<title>evaluator.lua:infer (27 samples, 18.49%)</title><rect x="963.7" y="309" width="218.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="966.70" y="319.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="453" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="661" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="981" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (65 samples, 44.52%)</title><rect x="656.6" y="437" width="525.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="659.58" y="447.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (130 samples, 89.04%)</title><rect x="131.2" y="837" width="1050.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="134.23" y="847.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="1045" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="357" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="581" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >evaluator.l..</text>
</g>
<g >
<title>[string]:39 (12 samples, 8.22%)</title><rect x="10.0" y="85" width="97.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >[string]:39</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="1029" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="933" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="405" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="821" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (131 samples, 89.73%)</title><rect x="123.2" y="869" width="1058.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="126.15" y="879.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="565" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="373" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="597" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (131 samples, 89.73%)</title><rect x="123.2" y="853" width="1058.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="126.15" y="863.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (11 samples, 7.53%)</title><rect x="1093.0" y="261" width="88.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1096.01" y="271.5" >evaluator...</text>
</g>
<g >
<title>evaluator.lua:infer (90 samples, 61.64%)</title><rect x="454.5" y="533" width="727.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="457.52" y="543.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="517" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (94 samples, 64.38%)</title><rect x="422.2" y="549" width="759.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="425.19" y="559.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1093" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1103.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (21 samples, 14.38%)</title><rect x="1012.2" y="293" width="169.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1015.19" y="303.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (114 samples, 78.08%)</title><rect x="260.5" y="629" width="921.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="263.55" y="639.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (31 samples, 21.23%)</title><rect x="931.4" y="325" width="250.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="934.37" y="335.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="629" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (128 samples, 87.67%)</title><rect x="147.4" y="773" width="1034.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="150.40" y="783.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="501" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (44 samples, 30.14%)</title><rect x="826.3" y="357" width="355.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="829.30" y="367.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:check (12 samples, 8.22%)</title><rect x="10.0" y="133" width="97.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="965" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="975.5" >evaluator.lua:infer</text>
</g>
<g >
<title>[string]:__eq (9 samples, 6.16%)</title><rect x="826.3" y="309" width="72.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="829.30" y="319.5" >[string]..</text>
</g>
<g >
<title>evaluator.lua:infer (132 samples, 90.41%)</title><rect x="115.1" y="1013" width="1066.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="118.07" y="1023.5" >evaluator.lua:infer</text>
</g>
<g >
<title>[string]:__eq (9 samples, 6.16%)</title><rect x="826.3" y="277" width="72.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="829.30" y="287.5" >[string]..</text>
</g>
<g >
<title>evaluator.lua:infer (12 samples, 8.22%)</title><rect x="10.0" y="229" width="97.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >evaluator.l..</text>
</g>
<g >
<title>evaluator.lua:infer (86 samples, 58.90%)</title><rect x="486.8" y="517" width="695.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="489.85" y="527.5" >evaluator.lua:infer</text>
</g>
<g >
<title>evaluator.lua:infer (129 samples, 88.36%)</title><rect x="139.3" y="805" width="1042.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="142.32" y="815.5" >evaluator.lua:infer</text>
</g>
</g>
</svg>
